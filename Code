#include <bits/stdc++.h>
using namespace std;

int accountNumber = 12345;      //accountNumber, pinNumber, and balance are initialized as integers(global variables) 
int pinNumber = 54321;
int balance = 0;

bool login () {                  //fuction for input account number and PIN
	
	int givenAccountNumber = -1;
	int givenPinNumber = -1;
	bool isAccountInvalid = true;
	bool isPinInvalid = true;
	
	cout << "Welcome!" << endl;
	
	while (isAccountInvalid) {
		
		cout << "Enter your account number: ";
		cin >> givenAccountNumber;
		
		if (givenAccountNumber == accountNumber) {
			isAccountInvalid = false;
		} else {
			cout << "Invalid account number! Try again." << endl;
		}
	}

	while (isPinInvalid) {
		
		cout << "Enter your PIN: ";
		cin >> givenPinNumber;
		
		if (givenPinNumber == pinNumber) {
			isPinInvalid = false;
		} else {
			cout << "Invalid PIN number! Try again." << endl;
		}

	}

	return true;
		
}

int getUserOption () {              //fuction that returns the user's selected option

	int selectedOption = -1;

	cout << "Main menu:" << endl;
	cout << "	1 - View Bank balance" << endl;
	cout << "	2 - Withdraw cash" << endl;
	cout << "	3 - Deposit funds" << endl;
	cout << "	4 - Exit" << endl;
	cout << "Enter a choice: " << endl;
	cin >> selectedOption;
	
	return selectedOption;
	
}

void viewBalance () {           // function displays the current account balance

	cout << "You have:" << endl;
	cout << "Rs" << balance << endl;

}

void withdrawCash() {          //presents withdrawal options to the user and allows them to select an amount to withdraw
	
	int selectedOption = -1;
	int valueToWithdraw = 0;
	bool isNotFinished = true;

	do {
		
		cout << "Withdrawal options:" << endl;
		cout << "1 - Rs 100" << endl;
		cout << "2 - Rs 250" << endl;
		cout << "3 - Rs 500" << endl;
		cout << "4 - Rs 1000" << endl;
		cout << "5 - Rs 2000" << endl;
		cout << "6 - cancel transaction" << endl;
		cout << "choose a withdrawal option (1-6)" << endl;

		cin >> selectedOption;
		switch (selectedOption) {
			case 1:
				valueToWithdraw = 100;
				break;
			case 2:
				valueToWithdraw = 250;
				break;
			case 3:
				valueToWithdraw = 500;
				break;
			case 4:
				valueToWithdraw = 1000;
				break;
			case 5:
				valueToWithdraw = 2000;
				break;
			case 6:
				isNotFinished = false;
				break;
			default:
				cout << "Invalid option! Try again." << endl;
				break;
		} 
		
		if (valueToWithdraw != 0) {
			if (valueToWithdraw > balance) {
				cout << "You just have Rs" << balance << ". You can't withdraw Rs" << valueToWithdraw << endl;
			} else {
				balance = balance - valueToWithdraw;
				isNotFinished = false;
			}
			valueToWithdraw = 0;
		}

	} while (isNotFinished);	

}

void depositFunds() {          //eposit options to the user and allows them to select an amount to deposit

	int selectedOption = -1;	
	bool isNotFinished = true;

	do {
		
		cout << "Deposit options:" << endl;
		cout << "1 - Rs 100" << endl;
		cout << "2 - Rs 250" << endl;	
		cout << "3 - Rs 500" << endl;
		cout << "4 - Rs 1000" << endl;
		cout << "5 - Rs 2000" << endl;
		cout << "6 - cancel transaction" << endl;
		cout << "choose a deposit option (1-6)" << endl;

		cin >> selectedOption;
		switch (selectedOption) {
			case 1:
				balance = balance + 100;
				isNotFinished = false;
				break;
			case 2:
				balance = balance + 250;
				isNotFinished = false;
				break;
			case 3:
				balance = balance + 500;
				isNotFinished = false;
				break;
			case 4:
				balance = balance + 1000;
				isNotFinished = false;
				break;
			case 5:
				balance = balance + 2000;
				isNotFinished = false;	
				break;
			case 6:
				isNotFinished = false;
				break;
			default:
				cout << "Invalid option! Try again." << endl;
				break;
		} 
		
	} while (isNotFinished);

}

int main () {
				
	if (login()) {
		
		int NotFinished = true;

		do {
			
			switch (getUserOption()) {
				case 1:
					viewBalance();
					break;
				case 2:
					withdrawCash();
					break;
				case 3:
					depositFunds();
					break;
				case 4:
					isNotFinished = false;
					break;
				default:
					cout << "Invalid option! Try again." << endl;
					break;
			}

		} while (NotFinished);

	}

	return 0;

}
